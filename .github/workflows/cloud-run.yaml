name: Deployment to Cloud Run

on:
  push:
    branches:
      - "development"

env:
  PROJECT_ID: ${{secrets.GCP_SERVICES_PROJECT_ID}}
  SERVICES_ACCOUNT_KEY: ${{secrets.GCP_SERVICES_ACCOUNT_KEY}}
  SERVICE: ${{ secrets.SERVICE_NAME }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}
  REGION: ${{secrets.SERVICES_REGION}}

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # NOTE: Alternative option - authentication via credentials json
      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_SERVICES_ACCOUNT_KEY}}"

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v2"
        with:
          username: "_json_key"
          password: "${{ secrets.GCP_SERVICES_ACCOUNT_KEY }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |-
          docker build -t "${{env.GAR_LOCATION}}-docker.pkg.dev/${{env.PROJECT_ID}}/${{env.SERVICE}}:${{github.sha}}"  ./ 
          docker push "${{env.GAR_LOCATION}}-docker.pkg.dev/${{env.PROJECT_ID}}/${{env.SERVICE}}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: ${{env.GAR_LOCATION}}-docker.pkg.dev/${{env.PROJECT_ID}}/${{env.SERVICE}}:${{ github.sha }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
